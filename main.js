// // Cоздать функцию которая принимает число и возвращает  текст как в примере:
//     3275  —>  "3000 + 200 + 70 +5"

// const expanded = (num) => {
//     const arr = num.toString().split('').reverse()
//     return arr.reduce((acc, el, i) => {
//         if (el !== '0'){
//             acc.push(el + '0'.repeat(i))
//         }
//         return acc
//     }, []).reverse().join('+')
// }
//
// console.log(expanded(30275))

/*=====================================================================================*/

// Дан массив целых чисел, найдите тот, который встречается нечетное количество раз.
// Всегда будет только одно целое число, которое встречается нечетное количество раз
//     [1,2,3,4,5,2,4,1,3] -> 5


// const findOdd = (arr) => {
//     const res = {}
//     for (let item of arr){
//         res[item] = (res[item] || 0) + 1
//     }
//     for (let resKey in res) {
//         if (res[resKey] %2 !== 0){
//             return resKey
//         }
//     }
// }
//
// console.log(findOdd([1, 2, 3, 4, 5, 2, 4, 1, 3]));

/*=====================================================================================*/

// Знайти анаграму.
//     Перевірити чи слово має в собі такі самі літери як і поеперднє слово.
//
//     ANAGRAM | MGANRAA -> true
// EXIT | AXET -> false
// GOOD | DOGO -> true


// const anagrama = (str1, str2) => {
//     str1 = str1.toUpperCase()
//     str2 = str2.toUpperCase()
//
//     return str1.split('').sort().join('') === str2.split('').sort().join('')
// }
//
// console.log(anagrama('aa', 'aa'))

/*=====================================================================================*/

// Точная степень двойки
// Дано натуральное число N.
//     Выведите слово YES, если число N является точной степенью двойки, или слово NO в противном случае.
//     Операцией возведения в степень пользоваться нельзя!

// const func = (num) => {
//
//     if (num === 1) {
//         return 'YES'
//     }
//
//     if (num % 2 !== 0) {
//         return 'NO'
//     }
//
//     return func(num / 2)
// }
//
// console.log(func(8))

/*=====================================================================================*/

//  Сумма цифр числа
// Дано натуральное число N. Вычислите сумму его цифр.
//     При решении этой задачи нельзя использовать строки,
//     списки, массивы ну и циклы, разумеется.
//     Рекурсія)

// const sum = (num) => {
//     if (num === 0){
//         return 0
//     }
//     return num%10 + sum(Math.floor(num/10))
// }
//
// console.log(sum(12345))

/*=====================================================================================*/

// Палиндром
// Дано слово, состоящее только из строчных латинских букв. Проверьте, является ли это слово палиндромом. Выведите YES или NO.
//     При решении этой задачи нельзя пользоваться циклами, в решениях на питоне нельзя использовать срезы с шагом, отличным от 1.


// const palindrom = (str) => {
//     return str === str.split('').reverse().join('') ? 'YES' : 'NO'
// }
//
// console.log(palindrom('ABBA'))

/*=====================================================================================*/

// Количество единиц
// Дана последовательность натуральных чисел  в строке, завершающаяся двумя числами 0 подряд.
// Определите, сколько раз в этой последовательности встречается число 1. Числа, идущие после двух нулей, необходимо игнорировать.
//
// 2176491947586100 -> 3

// const countOnes = (str) => {
//     return str.split('00')[0].split('').filter(el => el === '1').length
// }
//
// console.log(countOnes('2176491947586100'))

/*=====================================================================================*/

// Вирівняти багаторівневий масив в однорівневий
//     [1,3, ['Hello, 'Wordd', [9,6,1]], ['oops'], 9] -> [1, 3, 'Hello, 'Wordd', 9, 6, 1, 'oops', 9]
// flat використовувати заборонено.

// const flat = (arr) => {
//     return arr.reduce((acc, el) => {
//         return acc.concat(Array.isArray(el)? flat(el): el)
//     }, [])
// }
//
// console.log(flat([1,3, ['Hello', 'Word', [9,6,1]], ['oops'], 9]))


/*=====================================================================================*/

// Знайти набільший елемент в масиві за допомогою reduce
//     [1,6,9,0,17,88,4,7] -> 88

// const findMax = (arr) => {
//     return arr.reduce((acc, el) => {
//         if (el > acc){
//             acc = el
//         }
//         return acc
//     }, 0)
// }
//
// console.log(findMax([1,6,9,0,17,88,4,7]))

// const wave = (str) => {
//     const res = []
//
//     for (let i = 0; i < str.length; i++){
//         res.push(str)
//
//     }
//
//     return res
// }
//
// console.log(wave('hello'))